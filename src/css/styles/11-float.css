@import "/src/common/theme.css";

body {
  margin: 100px;
}
/* CSS의 display 속성으로 특정 영역 보이지 않도록 설정 */
/* .mon-friend-son{
  di   height: 212px; splay: none;
} */

/* float 사용하기 */
/* float 자체는 독립적인 layout -> normal flow를 벗어남*/
.card {
  background: var(--pastel-pink);
  border: 1px solid green;

  .thumbnail {
    background: var(--pastel-yellow);
    /* float으로 인해 부모 요소인 thumbnail이 인식하지 못하는 높이를 포함하도록 BFC를 생성 */
    /* overflow: hidden; */
    /* width: 100%; */
    float: left;
    /* display: flow-root; */
    border: 1px solid red;

    img {
      /* position: relative;
      right: -50px;
      top: -50px; */
      /* float: left; */
      /* width: 100px; */
      vertical-align: middle;
      /* vertical-align: top; 이미지 아래쪽 여백을 없애기 위한 트릭 */
      /* display: block; 이미지 아래쪽 여백을 없애기 위한 트릭 */
    }
  }

  .subject {
    /* float: left; */
    background: var(--pastel-blue);
  }

  .content {
    /* float 효과를 해제하기 위해 clear 속성을 사용할 수 있다. */
    /* clear속성은 반드시 block 성향을 가지는 요소에만 지정할 수 있다. */
    /* clear: both; */
    background: var(--pastel-orange);
    /* float: left; */
  }
}

/* 추가적인 학습 */
.box-wrap {
  border: 1px solid black;

  .box {
    width: 100px;
    height: 100px;
  }

  .red {
    background-color: red;
    float: left;
  }
  .green {
    background-color: green;
    float: left;
  }
  .blue {
    background-color: blue;
    float: left;
    /* clear: left; */
  }
  .yellow {
    background-color: yellow;
    float: left;
    /* clear: left; */
  }
}

/* 이 상태에서는 .red, .green, .yellow 박스는 float 속성이 적용되어 있기 때문에, 
부모 .box-wrap이 그 요소들의 높이를 계산X */

/* 해결방법 1 - 부모요소 ::after 가상요소*/
/* .box-wrap::after {
  content: "";
  display: block;
  clear: both;
} */

/* 해결방법 2 - 부모요소 overflow:hidden */
/* .box-wrap {
  overflow: hidden;
} */

/* 해결방법 3 - 부모요소 display:flow-root*/
/* .box-wrap {
  display: flow-root;
} */

.box-wrap {
  float: left;
  width: 100%;
}
